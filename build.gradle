import de.qualersoft.jmeter.gradleplugin.task.*

plugins {
	id "de.qualersoft.jmeter" version "2.4.0"
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'br.com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.0")
	set('springBootVersion', '3.0.2')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'javax.validation:validation-api:2.0.0.Final'
	compileOnly 'org.projectlombok:lombok'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'org.hibernate:hibernate-validator:8.0.0.Final'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.apache.kafka:kafka-streams:3.3.2'
	testImplementation 'junit:junit:4.13.2'
	testImplementation 'org.mockito:mockito-core:2.16.0'
	implementation 'org.springframework.kafka:spring-kafka:3.0.2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('runJMeter', JMeterRunTask) {
	jmxFile.set("test.jmx")
}

tasks.register('jmeterReport', JMeterReportTask) {
	jmxFile.set("test.jmx")
	dependsOn("runJMeter")
}

tasks.register('jmeterEdit', JMeterGuiTask) {
	jmxFile.set("test.jmx")
}
